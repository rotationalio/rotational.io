[
    {
        "uri": "/dc-metro",
        "content": "---\ntitle: \"DC Metro\"\nslug: \"dc-metro\"\nsubtitle: \"Public Transport Data\" \ndraft: false\nimage: img/data-playground/dc-metro.png\nsummary: Connect to DC Metro public transport data and start experimenting with scheduling models and apps.\ngithub_link: https://github.com/rotationalio/data-playground/tree/main/wmata\ndescription: DC WMATA provides public transportation data such as real-time bus and rail predictions. \nproducer_name: DC WMATA\nproducer_link: https://developer.wmata.com/docs/services/gtfs/operations/bus-gtfs-static\ndata: Bus & train trip updates, alerts, and vehicle positions.\nisaccountrequired: false\nlicense: Free\nlicense_warning: Please review terms and conditions. Access to data sources can change.\nisapikey_required: true\napi_type: GTFS protocol buffers\nsdks: N/A\nlimits: None\nweight: 5\n---\n{{% data-playground-wrapper %}}\n\n{{% data-playground-code-tabs %}}\n{{% data-playground-code-tab tabIndex=\"python\" name=\"Python\"  %}}\n\n      def example(name):\n            print(f\"example, {name}!\")\n\n{{% /data-playground-code-tab %}}\n\n{{% data-playground-code-tab tabIndex=\"go\" name=\"Go\"  %}}\n\npackage main\nimport \"fmt\"\nfunc main() {\n    fmt.Println(\"hello world\")\n}\n\n{{% /data-playground-code-tab %}}\n{{% /data-playground-code-tabs %}}\n\n{{% /data-playground-wrapper %}}\n\n{{% data-playground-content %}}\n\n!-- Add content for data playground here, including a table for data products if available --\n\n{{% /data-playground-content %}}\n",
        "tags": []
    },
    {
        "uri": "/finnhub",
        "content": "---\ntitle: \"Finnhub\"\nslug: \"finnhub\"\nsubtitle: \"Stock Market Data\"\ndraft: false\nimage: img/data-playground/finnhub.png\ngithub_link: \"github.com\"\ndescription: FinnHub provides real-time stock market data. Note that the stock market is closed during certain times of days and days of the week.\nsummary: Connect to stock market data and start experimenting with financial models and apps.\nlicense: Free\nlicense_warning: Please review terms and conditions. Access to data sources can change.\nproducer_name: FinnHub\nproducer_link: https://finnhub.io/\nisapikey_required: true\napi_type: REST, WebSocket\nsdks: Go\nlimits: N/A\ndata: Stock prices, company profiles, company & market news\nisaccountrequired: true\nweight: 1\n---\n\n{{% data-playground-wrapper %}}\n\n{{% data-playground-code-tabs %}}\n{{% data-playground-code-tab tabIndex=\"python\" name=\"Python\"  %}}\n\n      def example(name):\n      print(f\"example, {name}!\")\n\n{{% /data-playground-code-tab %}}\n\n{{% data-playground-code-tab tabIndex=\"go\" name=\"Go\"  %}}\n\npackage main\nimport \"fmt\"\nfunc main() {\n    fmt.Println(\"hello world\")\n}\n\n{{% /data-playground-code-tab %}}\n{{% /data-playground-code-tabs %}}\n\n{{% /data-playground-wrapper %}}\n\n{{% data-playground-content %}}\n\n!-- Add content for data playground here, including a table for data products if available --\n\n{{% /data-playground-content %}}\n",
        "tags": []
    },
    {
        "uri": "/noaa",
        "content": "---\ntitle: \"Noaa\"\nslug: \"noaa\"\nsubtitle: \"Stock Market Data\" \ndraft: false\nimage: img/data-playground/finnhub.png\ngithub_link: \"github.com\"\ndescription: FinnHub provides real-time stock market data. Note that the stock market is closed during certain times of days and days of the week.\nsummary: Connect to stock market data and start experimenting with financial models and apps.\nlicense: Free\nlicense_warning: Please review terms and conditions. Access to data sources can change.\nproducer_name: FinnHub\nproducer_link: https://finnhub.io/\nisapikey_required: true\napi_type: REST, Websocket\nsdks: Go\nlimits: N/A\ndata: Stock prices, company profiles, company & market news\nisaccountrequired: true\nweight: 2\n---\n\nAdd data products showcase \n\n",
        "tags": []
    },
    {
        "uri": "/opensky",
        "content": "---\ntitle: \"Opensky\"\nslug: \"opensky\"\nsubtitle: \"Stock Market Data\" \ndraft: false\nimage: img/data-playground/finnhub.png\nlink: \"github.com\"\ndescription: FinnHub provides real-time stock market data. Note that the stock market is closed during certain times of days and days of the week.\nsummary: Connect to stock market data and start experimenting with financial models and apps.\nlicense: Free\nproducer_name: FinnHub\nproducer_link: https://finnhub.io/\napi_key: Yes\napi_type: REST, Websocket\nsdks: Go\nlimits: N/A\ndata: Stock prices, company profiles, company & market news\naccount_required: Yes\nweight: 6\n---\n\n{{% data-playground-wrapper %}}\n\n{{% data-playground-code-tabs %}}\n{{% data-playground-code-tab tabIndex=\"python\" name=\"Python\"  %}}\n\n      def example(name):\n      print(f\"example, {name}!\")\n\n{{% /data-playground-code-tab %}}\n\n{{% data-playground-code-tab tabIndex=\"go\" name=\"Go\"  %}}\n\npackage main\nimport \"fmt\"\nfunc main() {\n    fmt.Println(\"hello world\")\n}\n\n{{% /data-playground-code-tab %}}\n{{% /data-playground-code-tabs %}}\n\n{{% /data-playground-wrapper %}}\n\n{{% data-playground-content %}}\n\n!-- Add content for data playground here, including a table for data products if available --\n\n{{% /data-playground-content %}}\n\n",
        "tags": []
    },
    {
        "uri": "/steam",
        "content": "---\ntitle: \"Steam\"\nslug: \"steam\"\nsubtitle: \"Game Reviews\" \ndraft: false\nimage: img/data-playground/steam.png\ngithub_link: \"https://github.com/rotationalio/data-playground/tree/main/steam\"\ndescription: The Steam API allows users to fetch statistics for individual games, data about users, or news feeds for game updates. All of this can be brought to bear to create powerful analytics on top of video game data made seamless using Ensign.\nsummary: Connect to game review data and start experimenting with game review models and apps.\nlicense: Free\nlicense_warning: Please review terms and conditions. Access to data sources can change.\nproducer_name: Steam\nproducer_link: https://steam.io/\nisapikey_required: true\napi_type: REST\nsdks: N/A\nlimits: 100,000 API calls per day\ndata: Game data and player stats\nisaccountrequired: false\nweight: 3\n---\n\n{{% data-playground-wrapper %}}\n\n{{% data-playground-code-tabs %}}\n{{% data-playground-code-tab tabIndex=\"python\" name=\"Python\"  %}}\n\ndef example(name):\n    print(f\"example, {name}!\")\n\n{{% /data-playground-code-tab %}}\n\n{{% data-playground-code-tab tabIndex=\"go\" name=\"Go\"  %}}\n\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"net/http\"\n)\n\ntype SteamApps struct {\n\tAppList struct {\n\t\tApps []SteamApp\n\t}\n}\n\ntype SteamApp struct {\n\tAppId uint64\n\tName  string\n}\n\ntype AppReviews struct {\n\tSuccess      int\n\tQuerySummary QuerySummary\n\tReviews      []Review\n}\n\ntype QuerySummary struct {\n\tNumberReviews          int\n\tReviewScore            int\n\tReviewScoreDescription string\n\tTotalPositive          int\n\tTotalNegative          int\n\tTotalReviews           int\n}\n\ntype Review struct {\n\tID                string\n\tAuthor            Author\n\tLanguage          string\n\tReview            string\n\tTimeCreated       int64\n\tTimeUpdated       int64\n\tVotedUp           bool\n\tVotesUp           int\n\tVotesDown         int\n\tVotesFunny        int\n\tWeightedVoteScore string\n\tCommentCount      json.RawMessage\n\tSteamPurchase     bool\n\tReceivedForFree   bool\n\tEarlyAccess       bool\n}\n\ntype Author struct {\n\tUserID               string\n\tNumberGamesOwned     int\n\tNumberReviews        int\n\tPlayTimeForever      int\n\tPlaytimeLastTwoWeeks int\n\tLastPlayed           int64\n}\n\nfunc main() {\n\tvar err error\n\tvar response *http.Response\n\tif response, err = http.Get(\"https://api.steampowered.com/ISteamApps/GetAppList/v2/\"); err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t}\n\tdefer response.Body.Close()\n\n\tvar apps SteamApps\n\tif response.StatusCode != 200 {\n\t\tfmt.Println(\"status code\", response.StatusCode)\n\t\treturn\n\t}\n\tjson.NewDecoder(response.Body).Decode(&apps)\n\n\tvar reviews AppReviews\n\turl := \"https://store.steampowered.com/appreviews/413150?json=1'\"\n\tif response, err = http.Get(url); err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t}\n\tjson.NewDecoder(response.Body).Decode(&reviews)\n\n\tfmt.Println(len(reviews.Reviews))\n\tfmt.Println(reviews.Reviews[0].Review)\n}\n\n{{% /data-playground-code-tab %}}\n{{% /data-playground-code-tabs %}}\n\n{{% /data-playground-wrapper %}}\n\n{{% data-playground-content %}}\n\n!-- Add content for data playground here, including a table for data products if available --\n\n{{% /data-playground-content %}}\n",
        "tags": []
    },
    {
        "uri": "/us-geological",
        "content": "---\ntitle: \"US Geological\"\nslug: \"us-geological\"\nsubtitle: \"Stock Market Data\" \ndraft: false\nimage: img/data-playground/finnhub.png\nlink: \"github.com\"\ndescription: FinnHub provides real-time stock market data. Note that the stock market is closed during certain times of days and days of the week.\nsummary: Connect to stock market data and start experimenting with financial models and apps.\nlicense: Free\nproducer_name: FinnHub\nproducer_link: https://finnhub.io/\napi_key: Yes\napi_type: REST, WebSocket\nsdks: Go\nlimits: N/A\ndata: Stock prices, company profiles, company & market news\naccount_required: Yes\nweight: 4\n---\n\n{{% data-playground-wrapper %}}\n\n{{% data-playground-code-tabs %}}\n{{% data-playground-code-tab tabIndex=\"python\" name=\"Python\"  %}}\n\n      def example(name):\n      print(f\"example, {name}!\")\n\n{{% /data-playground-code-tab %}}\n\n{{% data-playground-code-tab tabIndex=\"go\" name=\"Go\"  %}}\n\npackage main\nimport \"fmt\"\nfunc main() {\n    fmt.Println(\"hello world\")\n}\n\n{{% /data-playground-code-tab %}}\n{{% /data-playground-code-tabs %}}\n\n{{% /data-playground-wrapper %}}\n\n{{% data-playground-content %}}\n\n!-- Add content for data playground here, including a table for data products if available --\n\n{{% /data-playground-content %}}\n",
        "tags": []
    }
]