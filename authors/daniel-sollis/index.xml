<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rotational Labs</title><link>https://rotational.io/authors/daniel-sollis/</link><description>Recent content on Rotational Labs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 28 Mar 2023 13:29:11 -0400</lastBuildDate><atom:link href="https://rotational.io/authors/daniel-sollis/index.xml" rel="self" type="application/rss+xml"/><item><title>Mocking the Universe: Two Techniques for Testing gRPC with Mocks</title><link>https://rotational.io/blog/mocking-the-universe/</link><pubDate>Tue, 28 Mar 2023 13:29:11 -0400</pubDate><guid>https://rotational.io/blog/mocking-the-universe/</guid><description>&lt;p>At Rotational, &lt;a href="https://rotational.io/blog/what-are-protocol-buffers/">we use gRPC&lt;/a> &lt;a href="https://rotational.io/blog/documenting-grpc-with-openapi">quite a bit&lt;/a>. It&amp;rsquo;s great for specifying network APIs, but can challenge us to find new ways to thoroughly test the code. Follow along with this post to learn two ways of using &lt;a href="https://rotational.io/blog/fake-it-when-you-make-it/">mocking&lt;/a> to test gRPC services!&lt;/p></description></item><item><title>Building a Raft (Part 3)</title><link>https://rotational.io/blog/building-a-raft-part-3/</link><pubDate>Tue, 14 Feb 2023 12:24:32 -0500</pubDate><guid>https://rotational.io/blog/building-a-raft-part-3/</guid><description>&lt;p>In the third and final part of our series exploring the popular consensus algorithm we&amp;rsquo;ll finally explore how Raft handles leader election, and in doing so discover how Raft is so incredibly resilient.&lt;/p></description></item><item><title>Building a Raft (Part 2)</title><link>https://rotational.io/blog/building-a-raft-part-2/</link><pubDate>Tue, 10 Jan 2023 09:55:04 -0500</pubDate><guid>https://rotational.io/blog/building-a-raft-part-2/</guid><description>&lt;p>In our first installment on how to implement the famous Raft algorithm, we introduced the log: an ordered sequence of operations that serves as the core data structure for distributed consensus. In this second part, we&amp;rsquo;ll demonstrate the beating heart of Raft, which is log replication.&lt;/p></description></item><item><title>Building a Raft (Part 1)</title><link>https://rotational.io/blog/building-a-raft-part-1/</link><pubDate>Mon, 19 Dec 2022 17:14:04 -0500</pubDate><guid>https://rotational.io/blog/building-a-raft-part-1/</guid><description>&lt;p>With all the &lt;a href="https://rotational.io/blog/six-things-you-didnt-know-about-crypto/">blockchain breaches&lt;/a> and &lt;a href="https://rotational.io/blog/twitter-wont-disappear-overnight/">social media escapades&lt;/a>, there&amp;rsquo;s been an awful lot of buzz about distributed systems lately. But how many of us really understand how they work? Let&amp;rsquo;s dive in together&amp;hellip;&lt;/p></description></item><item><title>Choosing Serialization Formats in Go</title><link>https://rotational.io/blog/go-serialization-formats/</link><pubDate>Mon, 05 Dec 2022 10:27:11 -0500</pubDate><guid>https://rotational.io/blog/go-serialization-formats/</guid><description>&lt;p>Serialization format is an often-overlooked engineering step that could make your application as slow as a turtle or as speedy as a cheetah!&lt;/p></description></item><item><title>Getting Started With Tmux</title><link>https://rotational.io/blog/getting-started-with-tmux/</link><pubDate>Fri, 15 Apr 2022 09:41:51 -0700</pubDate><guid>https://rotational.io/blog/getting-started-with-tmux/</guid><description>&lt;p>If you’re working in distributed systems, having a good terminal setup is pretty important! On MacOS &lt;a href="https://iterm2.com/">iTerm2&lt;/a> is a popular choice. It has tabs, autocomplete, a built-in password manager and a fantastic screen splitting feature. If however you’re like me and aren’t using a Mac it can be difficult to find a replacement that fits your needs. Tmux is here to help!&lt;/p></description></item></channel></rss>