<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing on Rotational Labs</title><link>https://rotational.io/tags/testing/</link><description>Recent content in Testing on Rotational Labs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 28 Mar 2023 13:29:11 -0400</lastBuildDate><atom:link href="https://rotational.io/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Mocking the Universe: Two Techniques for Testing gRPC with Mocks</title><link>https://rotational.io/blog/mocking-the-universe/</link><pubDate>Tue, 28 Mar 2023 13:29:11 -0400</pubDate><guid>https://rotational.io/blog/mocking-the-universe/</guid><description>&lt;p>At Rotational, &lt;a href="https://rotational.io/blog/what-are-protocol-buffers/">we use gRPC&lt;/a> &lt;a href="https://rotational.io/blog/documenting-grpc-with-openapi">quite a bit&lt;/a>. It&amp;rsquo;s great for specifying network APIs, but can challenge us to find new ways to thoroughly test the code. Follow along with this post to learn two ways of using &lt;a href="https://rotational.io/blog/fake-it-when-you-make-it/">mocking&lt;/a> to test gRPC services!&lt;/p></description></item></channel></rss>