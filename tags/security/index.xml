<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on Rotational Labs</title><link>https://rotational.io/tags/security/</link><description>Recent content in Security on Rotational Labs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 05 Dec 2024 15:17:41 -0500</lastBuildDate><atom:link href="https://rotational.io/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Rotational Joins EU-US Data Privacy Framework to Strengthen Privacy Commitment</title><link>https://rotational.io/blog/rotational-joins-eu-us-data-privacy-framework-to-strengthen-privacy-commitment/</link><pubDate>Thu, 05 Dec 2024 15:17:41 -0500</pubDate><guid>https://rotational.io/blog/rotational-joins-eu-us-data-privacy-framework-to-strengthen-privacy-commitment/</guid><description>&lt;p>Rotational has joined the US-EU Data Privacy Framework, reinforcing its commitment to privacy in an era of growing data-driven innovation and generative AI.&lt;/p></description></item><item><title>HMAC Verification Tokens</title><link>https://rotational.io/blog/hmac-verification-tokens/</link><pubDate>Wed, 06 Nov 2024 14:27:01 -0500</pubDate><guid>https://rotational.io/blog/hmac-verification-tokens/</guid><description>&lt;p>In this post, we explore sending a secure message to a user that doesn&amp;rsquo;t have an account on your system and therefore cannot be authenticated. We&amp;rsquo;ll explore the use of HMAC verification tokens that you can email to a recipient as a single-use access code for a specific message or document.&lt;/p></description></item><item><title>Data Access Controls for Generative AI</title><link>https://rotational.io/blog/data-access-controls-for-generative-ai/</link><pubDate>Mon, 26 Aug 2024 09:46:34 -0500</pubDate><guid>https://rotational.io/blog/data-access-controls-for-generative-ai/</guid><description>&lt;p>Anyone who has worked on a POSIX system is used to fine-grained data access rights for files and directories. In a world of generative AI, do we need a new permissions model for files used to train LLMs and serve live inferences?&lt;/p></description></item><item><title>Introducing Whisper</title><link>https://rotational.io/blog/introducing-whisper/</link><pubDate>Fri, 01 Oct 2021 16:32:47 -0400</pubDate><guid>https://rotational.io/blog/introducing-whisper/</guid><description>&lt;p>Imagine you have a new engineer joining your team and you need to provide passwords for access to critical systems. Or you need to send a sensitive file to a client. Or you need to share encryption keys with a team member. What do you do?&lt;/p></description></item><item><title>Using Google's Secret Manager API with Go</title><link>https://rotational.io/blog/secrets-manager-with-go/</link><pubDate>Tue, 01 Jun 2021 08:26:38 -0400</pubDate><guid>https://rotational.io/blog/secrets-manager-with-go/</guid><description>&lt;p>Security is by definition an inconvenience. At the very least, it&amp;rsquo;s about making access to data as challenging as possible for the baddies, conveniently measured in computation time. But good security also requires us good folks to go above and beyond â€” adopting architectural and engineering practices that involve more forethought, more effort, and more testing than are strictly required to get a basic application running on the web. If you&amp;rsquo;re here already, we don&amp;rsquo;t need to convince you that the effort is well worth it; good security pays for itself in customer trust, not to mention helping to preclude the kinds of breaches that can get careless folks in hot water. In this post, we&amp;rsquo;ll dive into Google&amp;rsquo;s Secret Manager service, walk through the setup steps, and explore some Go code to interact with the API.&lt;/p></description></item></channel></rss>